#pragma once
#include "C_Global.h"
#include "C_Sector.h"

class C_ClientInfo;

//// 팀 정보
//struct Team
//{
//	C_ClientInfo* player1;
//	C_ClientInfo* player2;
//
//	Team() {}
//	Team(C_ClientInfo* _player1, C_ClientInfo* _player2)
//	{
//		player1 = _player1;
//		player2 = _player2;
//	}
//};

// 방의 정보
struct RoomInfo
{
private:
	void* weaponTimerHandle;		// 무기 선택 타이머 핸들
	int numOfPlayer;				// 현재 방에 있는 플레이어 수
	ROOMSTATUS roomStatus;			// 방의 상태
	list<C_ClientInfo*>playerList;	// 유저들을 리스트에 저장
	C_Sector* sector;				// 이 방의 섹터 매니저
	int carSeed;					// 차량 씨드

public:
	RoomInfo(C_ClientInfo** _playerList, int _numOfPlayer);

	bool LeaveRoom(C_ClientInfo* _player);

	// 플레이어 리스트를 리턴해주되, 어차피 복사본이 전달되므로 원본은 영향이 없다.
	list<C_ClientInfo*> GetPlayerList() { return playerList; }

	bool IsPlayerListEmpty() { return playerList.empty(); }

	int GetPlayerListSize() { return (int)playerList.size(); }

	void SetWeaponTimerHandle(void* _handle) { weaponTimerHandle = _handle; }
	void* GetWeaponTimerHandle() { return weaponTimerHandle; }

	void SetNumOfPlayer(int _numOfPlayer) { numOfPlayer = _numOfPlayer; }
	int GetNumOfPlayer() { return numOfPlayer; }

	void SetCarSeed(int _cardSeed) { carSeed = _cardSeed; }
	int GetCarSeed() { return carSeed; }

	void SetRoomStatus(ROOMSTATUS _roomStatus) { roomStatus = _roomStatus; }
	ROOMSTATUS GetRoomStatus() { return roomStatus; }

	C_Sector* GetSector() { return sector; }
};

class RoomManager
{
	C_List<RoomInfo*>* roomList;

private:
	static RoomManager* instance;

	RoomManager() {}
	~RoomManager() {}
public:
	static RoomManager* GetInstance();
	static void Destroy();
	void Init();
	void End();

public:
	bool CreateRoom(C_ClientInfo* _players[], int _numOfPlayer);
	bool DeleteRoom(RoomInfo* _room);
	bool CheckLeaveRoom(C_ClientInfo* _ptr);
};